// import { createContext, useContext } from "react";
// import PropTypes from "ptop-types";
// import { useReducer } from "react";

// const AuthContext = createContext;

// const FAKE_USER = {
// 	name: "Patrick",
// 	email: "patrick@gmail.com",
// 	password: "Patrick123.",
// 	avatar: "https://i.pravatar.cc/100?u=zz",
// };

// const initialState = {
// 	user: null,
// 	isAuthenticated: false,
// };

// function reducer(state, action) {
// 	switch (action.type) {
// 		case "":
// 			return { ...state };
// 	}
// }

// function AuthProvider({ children }) {
// 	const [{ user, isAuthenticated }, dispatch] = useReducer(
// 		initialState,
// 		reducer
// 	);

// 	return <AuthContext.Provider>{children}</AuthContext.Provider>;
// }

// function useAuth() {
// 	const context = useContext(AuthContext);
// 	if (context === undefined) throw new Error("User is not Authenticated");
// 	return context;
// }

// AuthProvider.propTypes = {
// 	children: PropTypes.any.isRequired,
// };
// export { AuthProvider, useAuth };
